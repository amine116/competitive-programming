/*
    Author: Aminul Islam.
    Email: iaminul237@gmail.com
    Facebook: www.facebook.com/aminul.islam116
    Department: mathematics
    Institution: Shahjalal university of science and technology, Sylhet.
    Bangladesh.
*/
#include<bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define sll signed long long
#define I() ( { int a ; read(a) ; a; } )
#define L() ( { ll a ; read(a) ; a; } )
#define D() ({double a; scanf("%lf", &a); a;})
#define UL() ( { ull a; read(a); a; } )
#define SL() ( { sll a; read(a); a; } )
#define getString() ({ string s; cin >> s; s;})
#define mapLL map<ll, ll>
#define mapSL map<string, ll>
#define mapLLIt mapLL::iterator
#define mapSLIt mapSL::iterator

#define rep(n) for(ll i = 0; i < n; i++)
#define repMapLL(mp) for(mapLLIt it = mp.begin(); it != mp.end(); it++)
#define repMapSL(mp) for(mapSLIt it = mp.begin(); it != mp.end(); it++)

#define print1(a) (printf("%I64d ", a))
#define print1ln(a) (printf("%I64d\n", a))
#define print2(a, b) (printf("%I64d %I64d ", a, b))
#define print2ln(a, b) (printf("%I64d %I64d\n", a, b))
#define print3ln(a, b, c) (printf("%I64d %I64d %I64d\n", a, b, c))
#define newLine (printf("\n"))

#define mod 1000000007
#define MAX 300005

template<class T>inline bool read(T &x){
    int c=getchar();int sgn=1;
    while(~c&&c<'0'||c>'9'){if(c=='-')sgn=-1;c=getchar();}
    for(x=0;~c&&'0'<=c&&c<='9';c=getchar())x=x*10+c-'0';
    x*=sgn; return ~c;
}
using namespace std;
int main(){
	string encryptedMessage = getString();
	ll k = L();

	ll cndSign = 0, snoSign = 0, lengthOfGivenString = encryptedMessage.size();

	for(ll i = 0; i<lengthOfGivenString; i++)
	{
		if(encryptedMessage[i] == '?') cndSign++;
		else if(encryptedMessage[i] == '*') snoSign++;
	}


	lengthOfGivenString -= cndSign + snoSign;

	if(lengthOfGivenString - (cndSign + snoSign) > k)
	{
		printf("Impossible\n");
		return 0;
	}

	if(lengthOfGivenString < k && snoSign == 0)
	{
		printf("Impossible\n");
		return 0;
	}

	if(lengthOfGivenString > k)
	{
		ll reminder = lengthOfGivenString - k;
		for(ll i = 0; i<(ll)encryptedMessage.size(); i++)
		{
			if(encryptedMessage[i] == '?' || encryptedMessage[i] == '*')
			{
				encryptedMessage[i-1] = '*';
				reminder--;
				if(reminder == 0) break;
			}
		}
	}
	else if(lengthOfGivenString < k)
	{
		string temp = "";
		ll tm = k - lengthOfGivenString;
		for(ll i = 0; i<(ll)encryptedMessage.size(); i++)
		{
			if(encryptedMessage[i] == '*')
			{
				char cha = encryptedMessage[i-1];
				if(tm > 0) while(tm--) temp += cha;
			}
			else temp += encryptedMessage[i];
		}
		encryptedMessage = temp;
	}

	for(ll i = 0; i<(ll)encryptedMessage.size(); i++)
	{
		if(encryptedMessage[i] != '?' && encryptedMessage[i] != '*') printf("%c", encryptedMessage[i]);
	}

	return 0;
}
