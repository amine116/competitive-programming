/*
    Author: Aminul Islam.
    Email: iaminul237@gmail.com
    Facebook: www.facebook.com/aminul.islam116
    Department: mathematics
    Institution: Shahjalal university of science and technology, Sylhet.
    Bangladesh.
*/
#include<bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define sll signed long long
#define I() ( { int a ; read(a) ; a; } )
#define L() ( { ll a ; read(a) ; a; } )
#define D() ({double a; scanf("%lf", &a); a;})
#define UL() ( { ull a; read(a); a; } )
#define SL() ( { sll a; read(a); a; } )
#define getString() ({ string s; cin >> s; s;})
#define mapLL map<ll, ll>
#define mapSL map<string, ll>
#define mapLLIt mapLL::iterator
#define mapSLIt mapSL::iterator

#define rep(n) for(ll i = 0; i < n; i++)
#define repMapLL(mp) for(mapLLIt it = mp.begin(); it != mp.end(); it++)
#define repMapSL(mp) for(mapSLIt it = mp.begin(); it != mp.end(); it++)

#define print1(a) (printf("%I64d ", a))
#define print1ln(a) (printf("%I64d\n", a))
#define print2(a, b) (printf("%I64d %I64d ", a, b))
#define print2ln(a, b) (printf("%I64d %I64d\n", a, b))
#define print3ln(a, b, c) (printf("%I64d %I64d %I64d\n", a, b, c))
#define newLine (printf("\n"))

#define mod 1000000007
#define MAX 300005

template<class T>inline bool read(T &x){
    int c=getchar();int sgn=1;
    while(~c&&c<'0'|c>'9'){if(c=='-')sgn=-1;c=getchar();}
    for(x=0;~c&&'0'<=c&&c<='9';c=getchar())x=x*10+c-'0';
    x*=sgn; return ~c;
}
using namespace std;

ll getPower(ll x, ll p){
    ll power = x;
    if(x == 0) return 0;
    if(p == 0) return 1;

    for(ll i = 2; i <= p; i++){
        power *= x;
    }
    return power;

}
///---------------------endOfSnippet----------------|o|

vector<ll> fibNums;
ll getAllFibNums(ll n){
    fibNums.push_back(0);
    fibNums.push_back(1);
    for(ll i = 2; fibNums[i - 1] + fibNums[i - 2] <= n; i++){
        fibNums.push_back(fibNums[i - 1] + fibNums[i - 2]);
    }
}

int main(){

    ll n = L();
    getAllFibNums(n);
    //rep(fibNums.size()) cout << fibNums[i] << " "; newLine;

    for(ll i = fibNums.size() - 2; i >= 2; i--){
        for(ll j = i - 1; j >= 1; j--){
            if(fibNums[i] + fibNums[j] == n - fibNums[j - 1]){
                print3ln(fibNums[i], fibNums[j], fibNums[j - 1]);
                return 0;
            }
            else if(3*fibNums[i] == n){
                print3ln(fibNums[i], fibNums[i], fibNums[i]);
                return 0;
            }
            else if(3*fibNums[j] == n){
                print3ln(fibNums[j], fibNums[j], fibNums[j]);
                return 0;
            }
            else if(3*fibNums[j - 1] == n){
                print3ln(fibNums[j - 1], fibNums[j - 1], fibNums[j - 1]);
                return 0;
            }
            else if(2*fibNums[i] + fibNums[j] == n){
                print3ln(fibNums[i], fibNums[i], fibNums[j]);
                return 0;
            }
            else if(fibNums[i] + 2*fibNums[j] == n){
                print3ln(fibNums[i], fibNums[j], fibNums[j]);
                return 0;
            }
            else if(2*fibNums[i] + fibNums[j - 1] == n){
                print3ln(fibNums[i], fibNums[i], fibNums[j - 1]);
                return 0;
            }
            else if(fibNums[i] + 2*fibNums[j - 1] == n){
                print3ln(fibNums[i], fibNums[j - 1], fibNums[j - 1]);
                return 0;
            }
            else if(2*fibNums[j] + fibNums[j - 1] == n){
                print3ln(fibNums[j], fibNums[j], fibNums[j - 1]);
                return 0;
            }
            else if(fibNums[j] + 2*fibNums[j - 1] == n){
                print3ln(fibNums[i], fibNums[i - 1], fibNums[j - 1]);
                return 0;
            }
        }
    }
    if(n == 1) print3ln(0LL, 0LL, 1LL);
    else if(n == 0) print3ln(0LL, 0LL, 0LL);
    else printf("I'm too stupid to solve this problem\n");
    return 0;
}
