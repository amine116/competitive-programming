/*
    Author: Aminul Islam.
    Email: iaminul237@gmail.com
    Facebook: www.facebook.com/aminul.islam116
    Department: mathematics
    Institution: Shahjalal university of science and technology, Sylhet.
    Bangladesh.
*/
#include<bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define sll signed long long
#define I() ( { int a ; read(a) ; a; } )
#define L() ( { ll a ; read(a) ; a; } )
#define D() ({double a; scanf("%lf", &a); a;})
#define UL() ( { ull a; read(a); a; } )
#define SL() ( { sll a; read(a); a; } )
#define rep(n) for(ll i = 0; i < n; i++)
 
#define print1(a) (printf("%I64d ", a))
#define print1ln(a) (printf("%I64d\n", a))
#define print2(a, b) (printf("%I64d %I64d ", a, b))
#define print2ln(a, b) (printf("%I64d %I64d\n", a, b))
#define print3ln(a, b, c) (printf("%I64d %I64d %I64d\n", a, b, c))
 
#define newLine (printf("\n"))
#define prnt1(a) (printf("%lld ", a))
#define prnt1ln(a) (printf("%lld\n", a))
#define prnt2(a, b) (printf("%lld %lld ", a, b))
#define prnt2ln(a, b) (printf("%lld %lld\n", a, b))
#define prnt3ln(a, b, c) (printf("%lld %lld %lld\n", a, b, c))
 
#define mod 1000000007
#define MAX 100000000
 
template<class T>inline bool read(T &x){
    int c=getchar();int sgn=1;
    while(~c&&c<'0'||c>'9'){if(c=='-')sgn=-1;c=getchar();}
    for(x=0;~c&&'0'<=c&&c<='9';c=getchar())x=x*10+c-'0';
    x*=sgn; return ~c;
}
using namespace std;
ll primes[MAX]; bool isPrime[MAX];
void setPrimes(){
	memset(isPrime, true, sizeof(isPrime));
	for(ll i = 2; i*i <= MAX; i++) 
		if(isPrime[i]) 
			 for(ll j = 2*i; j <= MAX; j += i) isPrime[j] = false;
	primes[0] = 0, primes[1] = 0;
	ll count = 0;
	for(ll i = 2; i <= MAX; i++){
		if(isPrime[i]) primes[i] = ++count;
		else primes[i] = count;
	}
}
int main(){	
	setPrimes();
	//for(ll i = 0; i <= MAX; i++) prnt1(primes[i]);
	ll x;
	while(x = L()){
		if(x == 0) break;
		ll realValue = primes[x];
		double theoriticalValue = (double)x/log((double)x);
		double error = (abs(((double)realValue - (double)theoriticalValue))/(double)realValue)*100.0;
		printf("\t%.1f\n", error);
	}
    
	return 0;
} 
